#!/usr/bin/env node

/**
 * Skrypt do automatycznego generowania i kopiowania danych pokrycia test√≥w
 * Uruchamiane podczas procesu budowania aplikacji
 */

import fs from 'fs'
import path from 'path'
import { execSync } from 'child_process'
import { fileURLToPath } from 'url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

const COVERAGE_FILE = path.join(__dirname, '..', 'coverage', 'coverage-final.json')
const PUBLIC_COVERAGE_FILE = path.join(__dirname, '..', 'public', 'coverage-final.json')

async function generateCoverage() {
  console.log('üîÑ Generowanie pokrycia test√≥w...')
  
  try {
    // Uruchom testy z pokryciem
    execSync('npm run test:coverage', { 
      stdio: 'inherit',
      cwd: path.join(__dirname, '..')
    })
    
    console.log('‚úÖ Testy wykonane pomy≈õlnie')
  } catch (error) {
    console.warn('‚ö†Ô∏è  B≈ÇƒÖd podczas wykonywania test√≥w:', error.message)
    console.log('üìù U≈ºywanie mock danych...')
    return false
  }
  
  // Sprawd≈∫ czy plik pokrycia zosta≈Ç wygenerowany
  if (!fs.existsSync(COVERAGE_FILE)) {
    console.warn('‚ö†Ô∏è  Nie znaleziono pliku pokrycia')
    return false
  }
  
  // Utw√≥rz katalog public je≈õli nie istnieje
  const publicDir = path.dirname(PUBLIC_COVERAGE_FILE)
  if (!fs.existsSync(publicDir)) {
    fs.mkdirSync(publicDir, { recursive: true })
  }
  
  // Skopiuj plik pokrycia do katalogu public
  try {
    fs.copyFileSync(COVERAGE_FILE, PUBLIC_COVERAGE_FILE)
    console.log('üìã Skopiowano dane pokrycia do public/')
    return true
  } catch (error) {
    console.error('‚ùå B≈ÇƒÖd podczas kopiowania pliku pokrycia:', error.message)
    return false
  }
}

async function main() {
  console.log('üöÄ Rozpoczynanie procesu aktualizacji pokrycia test√≥w...')
  
  const success = await generateCoverage()
  
  if (success) {
    console.log('üéâ Proces zako≈Ñczony pomy≈õlnie!')
  } else {
    console.log('üí° Aplikacja bƒôdzie u≈ºywaƒá mock danych pokrycia')
  }
}

// Uruchom tylko je≈õli wywo≈Çane bezpo≈õrednio
main().catch(console.error)
